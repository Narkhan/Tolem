# Generated by Django 4.0.5 on 2022-08-01 17:32

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('name', models.CharField(help_text='Food category', max_length=255, verbose_name='Food category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='FoodItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('name', models.CharField(help_text='Food name', max_length=50, verbose_name='Name')),
                ('description', models.CharField(help_text='Food name', max_length=255, verbose_name='Name')),
                ('price', models.PositiveIntegerField(default=0, help_text='Price of food item')),
                ('is_active', models.BooleanField(default=True, help_text='Is active?', verbose_name='Is active?')),
                ('category', models.ForeignKey(help_text='Food category', on_delete=django.db.models.deletion.DO_NOTHING, related_name='food_items', to='api.category', verbose_name='Food category')),
            ],
            options={
                'verbose_name': 'Food item',
                'verbose_name_plural': 'Food items',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('complete', models.BooleanField(default=False, help_text='Is complete?', verbose_name='Is complete?')),
                ('transaction_id', models.CharField(help_text='Transaction ID', max_length=255, verbose_name='Transaction ID')),
                ('is_paid', models.BooleanField(default=False, help_text='Is paid?', verbose_name='Is paid?')),
                ('received', models.BooleanField(default=False, help_text='Is received?', verbose_name='Is received?')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('name', models.CharField(help_text='Restaurant name', max_length=255, verbose_name='Name')),
                ('address', models.CharField(help_text='Restaurant address', max_length=255, verbose_name='Address')),
                ('latitude', models.FloatField(help_text='Restaurant latitude', verbose_name='Latitude')),
                ('longitude', models.FloatField(help_text='Restaurant longitude', verbose_name='Longitude')),
            ],
            options={
                'verbose_name': 'Restaurant',
                'verbose_name_plural': 'Restaurants',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(help_text='Username for login', max_length=50, unique=True, verbose_name='Username')),
                ('password', models.CharField(help_text='Password for login', max_length=50, verbose_name='Password')),
                ('email', models.EmailField(help_text='Email for login', max_length=254, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(help_text='First Name', max_length=50, verbose_name='First Name')),
                ('last_name', models.CharField(help_text='Last Name', max_length=50, verbose_name='Last Name')),
                ('is_active', models.BooleanField(default=True, help_text='Is Active', verbose_name='Is Active')),
                ('is_admin', models.BooleanField(default=False, help_text='Is Admin', verbose_name='Is Admin')),
                ('phone', models.CharField(max_length=50, verbose_name='Phone')),
                ('is_staff', models.BooleanField(default=False, help_text='Is Staff', verbose_name='Is Staff')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('description', models.CharField(help_text='Review description', max_length=255, verbose_name='Description')),
                ('rating', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('restaurant', models.OneToOneField(help_text='Restaurant review', on_delete=django.db.models.deletion.DO_NOTHING, to='api.restaurant', verbose_name='Restaurant review')),
                ('user', models.ForeignKey(help_text='User', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('quantity', models.PositiveSmallIntegerField(default=1, help_text='Quantity', verbose_name='Quantity')),
                ('food_item', models.ForeignKey(help_text='Food item', on_delete=django.db.models.deletion.DO_NOTHING, to='api.fooditem', verbose_name='Food item')),
                ('order', models.ForeignKey(help_text='Order', null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.order', verbose_name='Order')),
            ],
            options={
                'verbose_name': 'Order item',
                'verbose_name_plural': 'Order items',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='order_item',
            field=models.ManyToManyField(help_text='Order items', related_name='order_items', to='api.orderitem', verbose_name='Order items'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(help_text='User that ordered', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='User that ordered'),
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('food_items', models.ManyToManyField(help_text='Food items', to='api.fooditem', verbose_name='Food items')),
                ('restaurant', models.OneToOneField(help_text='Restaurant menu', on_delete=django.db.models.deletion.DO_NOTHING, to='api.restaurant', verbose_name='Restaurant menu')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.restaurant')),
                ('user', models.OneToOneField(help_text='User manager', on_delete=django.db.models.deletion.CASCADE, to='api.user', verbose_name='User manager')),
            ],
            options={
                'verbose_name': 'Manager',
                'verbose_name_plural': 'Managers',
            },
        ),
    ]
